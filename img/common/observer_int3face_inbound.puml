@startuml observer_int3face_inbound
rectangle "Tx" as tx1
rectangle "Tx" as tx2

cloud "Bitcoin" as btc
cloud "Ethereum" as eth
cloud "Int3face" as int3

node "Bitcoin Chain Client" as btcClient
node "Ethereum Chain Client" as ethClient
node "Int3face Chain Client" as int3Client

artifact "BTC Outbound Transfer" as btcOut
artifact "ETH Outbound Transfer" as ethOut
artifact "BTC Inbound Transfer" as btcIn
artifact "ETH Inbound Transfer" as ethIn

folder "Observer" as observer {
    node "Queue" as queue
    action "Process queue" as process
    action "Check if confirmed" as confirm
}

tx1 -d-> btc: "Receives tokens into vault"
tx2 -d-> eth: "Receives tokens into vault"

btcClient -u-> btc: "Observed Tx"
ethClient -u-> eth: "Observed Tx"

btcClient -d-> btcOut
ethClient -d-> ethOut

btcOut -d-> queue
ethOut -d-> queue

queue -d-> process
process -d-> confirm: For each item in queue
confirm -d-> btcIn #green: Confirmed
confirm -d-> ethIn #green: Confirmed
confirm --> queue #red: Not confirmed

btcIn -d-> int3Client: Signals inbound transfer
ethIn -d-> int3Client: Signals inbound transfer

int3Client -d-> int3: Broadcast **MsgInboundTransfer**
@enduml