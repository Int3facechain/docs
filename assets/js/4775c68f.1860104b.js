"use strict";(self.webpackChunkint3face=self.webpackChunkint3face||[]).push([[792],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>d});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=r.createContext({}),m=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},l=function(e){var t=m(e.components);return r.createElement(i.Provider,{value:t},e.children)},p="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),p=m(n),u=o,d=p["".concat(i,".").concat(u)]||p[u]||f[u]||a;return n?r.createElement(d,s(s({ref:t},l),{},{components:n})):r.createElement(d,s({ref:t},l))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=u;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c[p]="string"==typeof e?e:o,s[1]=c;for(var m=2;m<a;m++)s[m]=n[m];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5441:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>f,frontMatter:()=>a,metadata:()=>c,toc:()=>m});var r=n(7462),o=(n(7294),n(3905));const a={},s="Params",c={unversionedId:"int3face/modules/tokenfactory/params",id:"int3face/modules/tokenfactory/params",title:"Params",description:"The TokenFactory module uses params in this format:",source:"@site/docs/int3face/modules/tokenfactory/params.md",sourceDirName:"int3face/modules/tokenfactory",slug:"/int3face/modules/tokenfactory/params",permalink:"/docs/docs/docs/int3face/modules/tokenfactory/params",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Messages",permalink:"/docs/docs/docs/int3face/modules/tokenfactory/messages"},next:{title:"THORChain & ZetaChain",permalink:"/docs/docs/docs/comparisons/Int3face-THOR-Zeta"}},i={},m=[],l={toc:m},p="wrapper";function f(e){let{components:t,...n}=e;return(0,o.kt)(p,(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"params"},"Params"),(0,o.kt)("p",null,"The TokenFactory module uses params in this format:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-protobuf"},'// Params defines the parameters for the tokenfactory module.\nmessage Params {\n  // DenomCreationFee defines the fee to be charged on the creation of a new\n  // denom. The fee is drawn from the MsgCreateDenom\'s sender account, and\n  // transferred to the community pool.\n  repeated cosmos.base.v1beta1.Coin denom_creation_fee = 1 [\n    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",\n    (gogoproto.moretags) = "yaml:\\"denom_creation_fee\\"",\n    (gogoproto.nullable) = false\n  ];\n\n  // DenomCreationGasConsume defines the gas cost for creating a new denom.\n  // This is intended as a spam deterrence mechanism.\n  //\n  // See: https://github.com/CosmWasm/token-factory/issues/11\n  uint64 denom_creation_gas_consume = 2 [\n    (gogoproto.moretags) = "yaml:\\"denom_creation_gas_consume\\"",\n    (gogoproto.nullable) = true\n  ];\n\n  // FeeCollectorAddress is the address where fees collected from denom creation are sent to\n  string fee_collector_address = 3;\n}\n')))}f.isMDXComponent=!0}}]);