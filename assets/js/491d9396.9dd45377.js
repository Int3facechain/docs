"use strict";(self.webpackChunkint3face=self.webpackChunkint3face||[]).push([[9550],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var o=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var i=o.createContext({}),m=function(e){var t=o.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},p=function(e){var t=m(e.components);return o.createElement(i.Provider,{value:t},e.children)},l="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,i=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),l=m(r),d=n,f=l["".concat(i,".").concat(d)]||l[d]||u[d]||a;return r?o.createElement(f,s(s({ref:t},p),{},{components:r})):o.createElement(f,s({ref:t},p))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,s=new Array(a);s[0]=d;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c[l]="string"==typeof e?e:n,s[1]=c;for(var m=2;m<a;m++)s[m]=r[m];return o.createElement.apply(null,s)}return o.createElement.apply(null,r)}d.displayName="MDXCreateElement"},77560:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>c,toc:()=>m});var o=r(87462),n=(r(67294),r(3905));const a={},s="Params",c={unversionedId:"neutron/modules/3rdparty/osmosis/tokenfactory/params",id:"version-3.0/neutron/modules/3rdparty/osmosis/tokenfactory/params",title:"Params",description:"The TokenFactory module uses params in this format:",source:"@site/versioned_docs/version-3.0/neutron/modules/3rdparty/osmosis/tokenfactory/params.md",sourceDirName:"neutron/modules/3rdparty/osmosis/tokenfactory",slug:"/neutron/modules/3rdparty/osmosis/tokenfactory/params",permalink:"/docs/3.0/neutron/modules/3rdparty/osmosis/tokenfactory/params",draft:!1,tags:[],version:"3.0",frontMatter:{},sidebar:"docs",previous:{title:"Messages",permalink:"/docs/3.0/neutron/modules/3rdparty/osmosis/tokenfactory/messages"},next:{title:"Overview",permalink:"/docs/3.0/neutron/modules/3rdparty/osmosis/ibc-hooks/overview"}},i={},m=[],p={toc:m},l="wrapper";function u(e){let{components:t,...r}=e;return(0,n.kt)(l,(0,o.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"params"},"Params"),(0,n.kt)("p",null,"The TokenFactory module uses params in this format:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-protobuf"},'// Params defines the parameters for the tokenfactory module.\nmessage Params {\n  // DenomCreationFee defines the fee to be charged on the creation of a new\n  // denom. The fee is drawn from the MsgCreateDenom\'s sender account, and\n  // transferred to the community pool.\n  repeated cosmos.base.v1beta1.Coin denom_creation_fee = 1 [\n    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",\n    (gogoproto.moretags) = "yaml:\\"denom_creation_fee\\"",\n    (gogoproto.nullable) = false\n  ];\n\n  // DenomCreationGasConsume defines the gas cost for creating a new denom.\n  // This is intended as a spam deterrence mechanism.\n  //\n  // See: https://github.com/CosmWasm/token-factory/issues/11\n  uint64 denom_creation_gas_consume = 2 [\n    (gogoproto.moretags) = "yaml:\\"denom_creation_gas_consume\\"",\n    (gogoproto.nullable) = true\n  ];\n\n  // FeeCollectorAddress is the address where fees collected from denom creation are sent to\n  string fee_collector_address = 3;\n}\n')))}u.isMDXComponent=!0}}]);