"use strict";(self.webpackChunkint3face=self.webpackChunkint3face||[]).push([[127],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>f});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=l(r),m=a,f=d["".concat(c,".").concat(m)]||d[m]||p[m]||o;return r?n.createElement(f,i(i({ref:t},u),{},{components:r})):n.createElement(f,i({ref:t},u))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[d]="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},8155:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var n=r(7462),a=(r(7294),r(3905));const o={},i="ADR-010: Node Upgrades",s={unversionedId:"ADR/adr-010-node-ungrades",id:"ADR/adr-010-node-ungrades",title:"ADR-010: Node Upgrades",description:"Status",source:"@site/docs/ADR/adr-010-node-ungrades.md",sourceDirName:"ADR",slug:"/ADR/adr-010-node-ungrades",permalink:"/docs/docs/docs/ADR/adr-010-node-ungrades",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"ADR-009: Blockchain Explorer",permalink:"/docs/docs/docs/ADR/adr-009-blockchain-explorer"},next:{title:"ADR-011: Superfluid Staking",permalink:"/docs/docs/docs/ADR/adr-011-superfluid-staking"}},c={},l=[{value:"Status",id:"status",level:2},{value:"Context",id:"context",level:2},{value:"Steps to implement",id:"steps-to-implement",level:2},{value:"Research",id:"research",level:2},{value:"Architecture Diagram",id:"architecture-diagram",level:2}],u={toc:l},d="wrapper";function p(e){let{components:t,...o}=e;return(0,a.kt)(d,(0,n.Z)({},u,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"adr-010-node-upgrades"},"ADR-010: Node Upgrades"),(0,a.kt)("h2",{id:"status"},"Status"),(0,a.kt)("p",null,"In progress"),(0,a.kt)("h2",{id:"context"},"Context"),(0,a.kt)("p",null,"The Int3face chain requires regular updates to its node software to maintain security, stability, and performance. \\\nNode upgrades are essential to patch vulnerabilities, introduce new features, and ensure compatibility with the latest blockchain standards. \\\nBy keeping the nodes up-to-date, we can enhance the network's resilience, scalability, and overall functionality."),(0,a.kt)("h2",{id:"steps-to-implement"},"Steps to implement"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Research the best practices for node upgrades in blockchain networks - ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/Int3facechain/bridge/issues/121"},"#121")),(0,a.kt)("li",{parentName:"ul"},"Develop a node upgrades for the Int3face chain - ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/Int3facechain/bridge/issues/122"},"#122")),(0,a.kt)("li",{parentName:"ul"},"Add automated tests to verify the node upgrade process - ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/Int3facechain/bridge/issues/123"},"#123")),(0,a.kt)("li",{parentName:"ul"},"Made the solution well documented and easy to follow for validators - ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/Int3facechain/bridge/issues/124"},"#124"))),(0,a.kt)("h2",{id:"research"},"Research"),(0,a.kt)("p",null,"Resources:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://docs.cosmos.network/v0.47/build/modules/upgrade"},"Cosmos SDK x/upgrade")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://tutorials.cosmos.network/academy/2-cosmos-concepts/16-migrations.html"},"Cosmos Academy migrations"))),(0,a.kt)("h2",{id:"architecture-diagram"},"Architecture Diagram"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"node_upgrades_architecture",src:r(4327).Z,width:"671",height:"813"})))}p.isMDXComponent=!0},4327:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/node_upgrades_architecture-4c14dca7c5e070dd343b13b569fbfebf.png"}}]);