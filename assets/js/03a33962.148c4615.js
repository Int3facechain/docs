"use strict";(self.webpackChunkint3face=self.webpackChunkint3face||[]).push([[5472],{3905:(t,e,n)=>{n.d(e,{Zo:()=>s,kt:()=>c});var a=n(7294);function l(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function r(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?r(Object(n),!0).forEach((function(e){l(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function u(t,e){if(null==t)return{};var n,a,l=function(t,e){if(null==t)return{};var n,a,l={},r=Object.keys(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||(l[n]=t[n]);return l}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(l[n]=t[n])}return l}var o=a.createContext({}),d=function(t){var e=a.useContext(o),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},s=function(t){var e=d(t.components);return a.createElement(o.Provider,{value:e},t.children)},p="mdxType",k={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},m=a.forwardRef((function(t,e){var n=t.components,l=t.mdxType,r=t.originalType,o=t.parentName,s=u(t,["components","mdxType","originalType","parentName"]),p=d(n),m=l,c=p["".concat(o,".").concat(m)]||p[m]||k[m]||r;return n?a.createElement(c,i(i({ref:e},s),{},{components:n})):a.createElement(c,i({ref:e},s))}));function c(t,e){var n=arguments,l=e&&e.mdxType;if("string"==typeof t||l){var r=n.length,i=new Array(r);i[0]=m;var u={};for(var o in e)hasOwnProperty.call(e,o)&&(u[o]=e[o]);u.originalType=t,u[p]="string"==typeof t?t:l,i[1]=u;for(var d=2;d<r;d++)i[d]=n[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8464:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>o,contentTitle:()=>i,default:()=>k,frontMatter:()=>r,metadata:()=>u,toc:()=>d});var a=n(7462),l=(n(7294),n(3905));const r={},i="ADR-007: E2E Tests",u={unversionedId:"ADR/adr-007-e2e-tests",id:"ADR/adr-007-e2e-tests",title:"ADR-007: E2E Tests",description:"Status",source:"@site/docs/ADR/adr-007-e2e-tests.md",sourceDirName:"ADR",slug:"/ADR/adr-007-e2e-tests",permalink:"/docs/ADR/adr-007-e2e-tests",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"ADR-006: Metrics And Logs",permalink:"/docs/ADR/adr-006-metrics"},next:{title:"ADR-008: Automatic Signer List",permalink:"/docs/ADR/adr-008-automatic-signer-list"}},o={},d=[{value:"Status",id:"status",level:2},{value:"Context",id:"context",level:2},{value:"Test Cases Template",id:"test-cases-template",level:2},{value:"Test Cases",id:"test-cases",level:2},{value:"Steps to implement",id:"steps-to-implement",level:2}],s={toc:d},p="wrapper";function k(t){let{components:e,...n}=t;return(0,l.kt)(p,(0,a.Z)({},s,n,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"adr-007-e2e-tests"},"ADR-007: E2E Tests"),(0,l.kt)("h2",{id:"status"},"Status"),(0,l.kt)("p",null,"In progress"),(0,l.kt)("h2",{id:"context"},"Context"),(0,l.kt)("p",null,"E2E tests for inbound and outbound flow as well as key generation and vault migration."),(0,l.kt)("h2",{id:"test-cases-template"},"Test Cases Template"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"No"),(0,l.kt)("th",{parentName:"tr",align:null},"Scenario"),(0,l.kt)("th",{parentName:"tr",align:null},"Pre-condition"),(0,l.kt)("th",{parentName:"tr",align:null},"Pre-condition check"),(0,l.kt)("th",{parentName:"tr",align:null},"Steps"),(0,l.kt)("th",{parentName:"tr",align:null},"Expected result"),(0,l.kt)("th",{parentName:"tr",align:null},"Covered By"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"3"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("h2",{id:"test-cases"},"Test Cases"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"No"),(0,l.kt)("th",{parentName:"tr",align:null},"Scenario"),(0,l.kt)("th",{parentName:"tr",align:null},"Pre-condition"),(0,l.kt)("th",{parentName:"tr",align:null},"Pre-condition check"),(0,l.kt)("th",{parentName:"tr",align:null},"Steps"),(0,l.kt)("th",{parentName:"tr",align:null},"Expected result"),(0,l.kt)("th",{parentName:"tr",align:null},"Covered By"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"Inbound transfer"),(0,l.kt)("td",{parentName:"tr",align:null},"- Funded BTC addr",(0,l.kt)("br",null),"- 3 observer nodes",(0,l.kt)("br",null),"- 3 int3face nodes",(0,l.kt)("br",null),"- 3 BTC nodes"),(0,l.kt)("td",{parentName:"tr",align:null},"Observer int3face, BTC nodes are healthy"),(0,l.kt)("td",{parentName:"tr",align:null},"1. Send tokens from BTC addr to the vault",(0,l.kt)("br",null),"2. Wait until the tx is confirmed"),(0,l.kt)("td",{parentName:"tr",align:null},"1. Int3face balance is funded",(0,l.kt)("br",null),"2. Vault is funded",(0,l.kt)("br",null),"3. Int3face token supply == vault balance"),(0,l.kt)("td",{parentName:"tr",align:null},"TODO")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},"Outbound transfer"),(0,l.kt)("td",{parentName:"tr",align:null},"- Funded int3face addr",(0,l.kt)("br",null),"- 3 observer nodes",(0,l.kt)("br",null),"- 3 int3face nodes",(0,l.kt)("br",null),"- 3 BTC nodes"),(0,l.kt)("td",{parentName:"tr",align:null},"Observer int3face, BTC nodes are healthy"),(0,l.kt)("td",{parentName:"tr",align:null},"1. Send MsgOutboundTransfer"),(0,l.kt)("td",{parentName:"tr",align:null},"1. BTC addr is funded",(0,l.kt)("br",null),"2. Vault supply is decreased",(0,l.kt)("br",null),"3. Int3face token supply == vault balance"),(0,l.kt)("td",{parentName:"tr",align:null},"TODO")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"3"),(0,l.kt)("td",{parentName:"tr",align:null},"Key generation"),(0,l.kt)("td",{parentName:"tr",align:null},"- 3 observer nodes",(0,l.kt)("br",null),"- 3 int3face nodes",(0,l.kt)("br",null),"- 3 BTC nodes"),(0,l.kt)("td",{parentName:"tr",align:null},"Observer int3face, BTC nodes are healthy"),(0,l.kt)("td",{parentName:"tr",align:null},"1. Generate gov proposal to execute KeyGen tx",(0,l.kt)("br",null),"2. Vote on the proposal and accept it"),(0,l.kt)("td",{parentName:"tr",align:null},"1. Old vault is empty",(0,l.kt)("br",null),"2. New vault is funded",(0,l.kt)("br",null),"3. New vault balance is decreased by the fee"),(0,l.kt)("td",{parentName:"tr",align:null},"TODO")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"4"),(0,l.kt)("td",{parentName:"tr",align:null},"Vault migration: inbound transfer to the new vault"),(0,l.kt)("td",{parentName:"tr",align:null},"- Funded BTC addr",(0,l.kt)("br",null),"- 3 observer nodes",(0,l.kt)("br",null),"- 3 int3face nodes",(0,l.kt)("br",null),"- 3 BTC nodes"),(0,l.kt)("td",{parentName:"tr",align:null},"Observer int3face, BTC nodes are healthy"),(0,l.kt)("td",{parentName:"tr",align:null},"1. Generate gov proposal to execute KeyGen tx",(0,l.kt)("br",null),"2. Vote on the proposal and accept it",(0,l.kt)("br",null),"3. Send tokens from BTC addr to the new vault"),(0,l.kt)("td",{parentName:"tr",align:null},"1. Old vault is empty",(0,l.kt)("br",null),"2. New vault is funded (old vault + incoming tokens)",(0,l.kt)("br",null),"3. New vault balance is decreased by the fee",(0,l.kt)("br",null),"4. Int3face balance is funded",(0,l.kt)("br",null),"5. Int3face token supply == vault balance (considering fees)"),(0,l.kt)("td",{parentName:"tr",align:null},"TODO")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"5"),(0,l.kt)("td",{parentName:"tr",align:null},"Vault migration: outbound transfer from the new vault"),(0,l.kt)("td",{parentName:"tr",align:null},"- Funded int3face addr",(0,l.kt)("br",null),"- 3 observer nodes",(0,l.kt)("br",null),"- 3 int3face nodes",(0,l.kt)("br",null),"- 3 BTC nodes"),(0,l.kt)("td",{parentName:"tr",align:null},"Observer int3face, BTC nodes are healthy"),(0,l.kt)("td",{parentName:"tr",align:null},"1. Generate gov proposal to execute KeyGen tx",(0,l.kt)("br",null),"2. Vote on the proposal and accept it",(0,l.kt)("br",null),"3. Send MsgOutboundTransfer"),(0,l.kt)("td",{parentName:"tr",align:null},"1. Old vault is empty",(0,l.kt)("br",null),"2. New vault is funded (old vault - outgoing tokens)",(0,l.kt)("br",null),"3. New vault balance is decreased by the fee",(0,l.kt)("br",null),"4. BTC addr is funded",(0,l.kt)("br",null),"5. Int3face token supply == vault balance (considering fees)"),(0,l.kt)("td",{parentName:"tr",align:null},"TODO")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"6"),(0,l.kt)("td",{parentName:"tr",align:null},"Vault migration: multiple chains"),(0,l.kt)("td",{parentName:"tr",align:null},"- Funded int3face addr",(0,l.kt)("br",null),"- 3 observer nodes",(0,l.kt)("br",null),"- 3 int3face nodes",(0,l.kt)("br",null),"- 3 BTC nodes",(0,l.kt)("br",null),"- 3 DOGE nodes"),(0,l.kt)("td",{parentName:"tr",align:null},"Observer int3face, BTC, DOGE nodes are healthy"),(0,l.kt)("td",{parentName:"tr",align:null},"1. Generate gov proposal to execute KeyGen tx",(0,l.kt)("br",null),"2. Vote on the proposal and accept it",(0,l.kt)("br",null),"3. Send MsgOutboundTransfer to BTC",(0,l.kt)("br",null),"4. Send MsgOutboundTransfer to DOGE"),(0,l.kt)("td",{parentName:"tr",align:null},"1. Old vault is empty",(0,l.kt)("br",null),"2. New vault is funded (old vault - outgoing tokens)",(0,l.kt)("br",null),"3. New vault balance is decreased by the fee",(0,l.kt)("br",null),"4. BTC addr is funded",(0,l.kt)("br",null),"5. DOGE addr is funded",(0,l.kt)("br",null),"5. Int3face token supply == vault balance for both BTC and DOGE (considering fees)"),(0,l.kt)("td",{parentName:"tr",align:null},"TODO")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"7"),(0,l.kt)("td",{parentName:"tr",align:null},"Observer shutdown after vault migration"),(0,l.kt)("td",{parentName:"tr",align:null},"- Funded int3face addr",(0,l.kt)("br",null),"- 3 observer nodes",(0,l.kt)("br",null),"- 3 int3face nodes",(0,l.kt)("br",null),"- 3 BTC nodes",(0,l.kt)("br",null),"- 3 DOGE nodes"),(0,l.kt)("td",{parentName:"tr",align:null},"Observer int3face, BTC, DOGE nodes are healthy"),(0,l.kt)("td",{parentName:"tr",align:null},"1. Generate gov proposal to execute KeyGen tx",(0,l.kt)("br",null),"2. Vote on the proposal and accept it",(0,l.kt)("br",null),"3. Shutdown the observer"),(0,l.kt)("td",{parentName:"tr",align:null},"1. Old vault is empty",(0,l.kt)("br",null),"2. New vault is funded (old vault - outgoing tokens)",(0,l.kt)("br",null),"3. New vault balance is decreased by the fee",(0,l.kt)("br",null),"4. Pool public key is updated for all the observers",(0,l.kt)("br",null),"5. Last observed height is updated for all the observers"),(0,l.kt)("td",{parentName:"tr",align:null},"TODO")))),(0,l.kt)("h2",{id:"steps-to-implement"},"Steps to implement"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Find libraries to run all the nodes in docker containers (there may be some dedicated repos to run BTC and\nDOGE): ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/Int3facechain/bridge/issues/79"},"79"),"."),(0,l.kt)("li",{parentName:"ol"},"Scaffold tests, test utilities and helpers: ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/Int3facechain/bridge/issues/80"},"80"),"."),(0,l.kt)("li",{parentName:"ol"},"Test ",(0,l.kt)("inlineCode",{parentName:"li"},"Inbound transfer"),": ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/Int3facechain/bridge/issues/81"},"81"),"."),(0,l.kt)("li",{parentName:"ol"},"Test ",(0,l.kt)("inlineCode",{parentName:"li"},"Outbound transfer"),": ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/Int3facechain/bridge/issues/82"},"82"),"."),(0,l.kt)("li",{parentName:"ol"},"Test ",(0,l.kt)("inlineCode",{parentName:"li"},"Key generation"),": ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/Int3facechain/bridge/issues/83"},"83"),"."),(0,l.kt)("li",{parentName:"ol"},"Test ",(0,l.kt)("inlineCode",{parentName:"li"},"Vault migration: inbound transfer to the new vault"),": ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/Int3facechain/bridge/issues/84"},"84"),"."),(0,l.kt)("li",{parentName:"ol"},"Test ",(0,l.kt)("inlineCode",{parentName:"li"},"Vault migration: outbound transfer from the new vault"),": ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/Int3facechain/bridge/issues/85"},"85"),"."),(0,l.kt)("li",{parentName:"ol"},"Test ",(0,l.kt)("inlineCode",{parentName:"li"},"Vault migration: multiple chains"),": ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/Int3facechain/bridge/issues/86"},"86"),"."),(0,l.kt)("li",{parentName:"ol"},"Test ",(0,l.kt)("inlineCode",{parentName:"li"},"Observer shutdown after vault migration"),": ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/Int3facechain/bridge/issues/87"},"87"),"."),(0,l.kt)("li",{parentName:"ol"},"Research how to run tests in the CI/CD: ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/Int3facechain/bridge/issues/88"},"88"),".")))}k.isMDXComponent=!0}}]);