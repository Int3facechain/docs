"use strict";(self.webpackChunkint3face=self.webpackChunkint3face||[]).push([[523],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=a.createContext({}),d=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,o=e.originalType,s=e.parentName,c=r(e,["components","mdxType","originalType","parentName"]),u=d(n),h=l,m=u["".concat(s,".").concat(h)]||u[h]||p[h]||o;return n?a.createElement(m,i(i({ref:t},c),{},{components:n})):a.createElement(m,i({ref:t},c))}));function m(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var o=n.length,i=new Array(o);i[0]=h;var r={};for(var s in t)hasOwnProperty.call(t,s)&&(r[s]=t[s]);r.originalType=e,r[u]="string"==typeof e?e:l,i[1]=r;for(var d=2;d<o;d++)i[d]=n[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},4997:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>r,toc:()=>d});var a=n(7462),l=(n(7294),n(3905));const o={},i="Setting up an Int3face validator",r={unversionedId:"deployment/testnet",id:"version-1.0/deployment/testnet",title:"Setting up an Int3face validator",description:"Hardware",source:"@site/versioned_docs/version-1.0/deployment/testnet.md",sourceDirName:"deployment",slug:"/deployment/testnet",permalink:"/docs/1.0/deployment/testnet",draft:!1,tags:[],version:"1.0",frontMatter:{},sidebar:"docs",previous:{title:"tBTC Main Components Diagram",permalink:"/docs/1.0/comparisons/tBTC-iBTC-nBTC-tech"},next:{title:"BTC Demo",permalink:"/docs/1.0/demos/btc/btc_inbound_outbound"}},s={},d=[{value:"Hardware",id:"hardware",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Golang",id:"golang",level:3},{value:"Linux installation",id:"linux-installation",level:3},{value:"Build essential",id:"build-essential",level:3},{value:"Int3face node",id:"int3face-node",level:2},{value:"Build and install the binary",id:"build-and-install-the-binary",level:3},{value:"Verify the installation",id:"verify-the-installation",level:3},{value:"Initialize node",id:"initialize-node",level:3},{value:"Download genesis",id:"download-genesis",level:3},{value:"Download app config",id:"download-app-config",level:3},{value:"Import validator key",id:"import-validator-key",level:3},{value:"Create new key",id:"create-new-key",level:4},{value:"Import existing",id:"import-existing",level:4},{value:"Sync the node",id:"sync-the-node",level:3},{value:"Download and Run update_trust.sh script",id:"download-and-run-update_trustsh-script",level:4},{value:"Start the node",id:"start-the-node",level:3},{value:"Top up the account",id:"top-up-the-account",level:3},{value:"Get your Tendermint validator public key",id:"get-your-tendermint-validator-public-key",level:3},{value:"Submit validator creation",id:"submit-validator-creation",level:3},{value:"Start a background service",id:"start-a-background-service",level:3},{value:"Observer node",id:"observer-node",level:2},{value:"Build and install the binary",id:"build-and-install-the-binary-1",level:3},{value:"Init the observer",id:"init-the-observer",level:3},{value:"Download observer config",id:"download-observer-config",level:3},{value:"Start the observer",id:"start-the-observer",level:3},{value:"Join the committee",id:"join-the-committee",level:3},{value:"DOGE Node",id:"doge-node",level:2},{value:"Download binaries",id:"download-binaries",level:3},{value:"Create home dir",id:"create-home-dir",level:3},{value:"Download DOGE configuration",id:"download-doge-configuration",level:3},{value:"Start the node",id:"start-the-node-1",level:3},{value:"Verify the node is started",id:"verify-the-node-is-started",level:3},{value:"Mine blocks",id:"mine-blocks",level:3},{value:"Verify the blocks are mined",id:"verify-the-blocks-are-mined",level:3},{value:"Check the balance of our node",id:"check-the-balance-of-our-node",level:3},{value:"BTC Node",id:"btc-node",level:2},{value:"Download binaries",id:"download-binaries-1",level:3},{value:"Create home dir",id:"create-home-dir-1",level:3},{value:"Download BTC configuration",id:"download-btc-configuration",level:3},{value:"Start the node",id:"start-the-node-2",level:3},{value:"Verify node is started",id:"verify-node-is-started",level:3},{value:"Create new wallet or load your own wallet",id:"create-new-wallet-or-load-your-own-wallet",level:3},{value:"Create",id:"create",level:4},{value:"Load",id:"load",level:4},{value:"Create new address for your wallet",id:"create-new-address-for-your-wallet",level:3},{value:"Mine blocks",id:"mine-blocks-1",level:3},{value:"Verify the blocks are mined",id:"verify-the-blocks-are-mined-1",level:3},{value:"Check the balance of our node",id:"check-the-balance-of-our-node-1",level:3},{value:"BCH Node",id:"bch-node",level:2},{value:"Download binaries",id:"download-binaries-2",level:3},{value:"Create home dir",id:"create-home-dir-2",level:3},{value:"Download BCH configuration",id:"download-bch-configuration",level:3},{value:"Create aliases",id:"create-aliases",level:3},{value:"Start the node",id:"start-the-node-3",level:3},{value:"Verify node is started",id:"verify-node-is-started-1",level:3},{value:"Create new address for your wallet",id:"create-new-address-for-your-wallet-1",level:3},{value:"Mine blocks",id:"mine-blocks-2",level:3},{value:"Verify the blocks are mined",id:"verify-the-blocks-are-mined-2",level:3},{value:"Check the balance of your node",id:"check-the-balance-of-your-node",level:3},{value:"LTC Node",id:"ltc-node",level:2},{value:"Download binaries",id:"download-binaries-3",level:3},{value:"Create home dir",id:"create-home-dir-3",level:3},{value:"Download LTC configuration",id:"download-ltc-configuration",level:3},{value:"Start the node",id:"start-the-node-4",level:3},{value:"Verify node is started",id:"verify-node-is-started-2",level:3},{value:"Create new wallet",id:"create-new-wallet",level:3},{value:"Create new address for your wallet",id:"create-new-address-for-your-wallet-2",level:3},{value:"Mine blocks",id:"mine-blocks-3",level:3},{value:"Verify the blocks are mined",id:"verify-the-blocks-are-mined-3",level:3},{value:"Check the balance of your node",id:"check-the-balance-of-your-node-1",level:3}],c={toc:d},u="wrapper";function p(e){let{components:t,...n}=e;return(0,l.kt)(u,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"setting-up-an-int3face-validator"},"Setting up an Int3face validator"),(0,l.kt)("h2",{id:"hardware"},"Hardware"),(0,l.kt)("p",null,"We recommend selecting an all-purpose server with:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"4 or more physical (or 8 virtual) CPU cores"),(0,l.kt)("li",{parentName:"ul"},"At least 500GB of SSD disk storage"),(0,l.kt)("li",{parentName:"ul"},"At least 16GB of memory"),(0,l.kt)("li",{parentName:"ul"},"At least 100mbps network bandwidth")),(0,l.kt)("p",null,"The usage of the blockchain grows, plus it may be needed to bootstrap external chain nodes, so the server requirements may increase as well, so you should have a plan for updating your server as well."),(0,l.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,l.kt)("h3",{id:"golang"},"Golang"),(0,l.kt)("p",null,"This project requires Go version 1.22 or later. Install Go by following the instructions on the official ",(0,l.kt)("a",{parentName:"p",href:"https://go.dev/doc/install"},"Go installation guide"),"."),(0,l.kt)("h3",{id:"linux-installation"},"Linux installation"),(0,l.kt)("p",null,"Install the latest version of Golang"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"wget https://go.dev/dl/go1.22.4.linux-amd64.tar.gz\n")),(0,l.kt)("p",null,"Remove any previous Go installation and install the new version"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"}," rm -rf /usr/local/go && tar -C /usr/local -xzf go1.22.4.linux-amd64.tar.gz\n")),(0,l.kt)("p",null,"Add ",(0,l.kt)("inlineCode",{parentName:"p"},"/usr/local/go/bin")," to the ",(0,l.kt)("inlineCode",{parentName:"p"},"PATH")," environment variable.\nYou can do this by adding the following line to your ",(0,l.kt)("inlineCode",{parentName:"p"},"$HOME/.profile")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"/etc/profile")," (for a system-wide installation):"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"export PATH=$PATH:/usr/local/go/bin\n")),(0,l.kt)("p",null,"Verify that you've installed Go by opening a command prompt and typing the following command"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"go version\n")),(0,l.kt)("h3",{id:"build-essential"},"Build essential"),(0,l.kt)("p",null,"Install essential tools and packages needed to compile and build the binaries."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt update && sudo apt upgrade -y\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt install build-essential -y\n")),(0,l.kt)("h2",{id:"int3face-node"},"Int3face node"),(0,l.kt)("h3",{id:"build-and-install-the-binary"},"Build and install the binary"),(0,l.kt)("p",null,"Int3face node provides CLI commands for submitting inbound and outbound transfers and other queries."),(0,l.kt)("p",null,"To install Int3face node, clone the repository to your local machine from Github. Please contact the Int3face team for accessing the ",(0,l.kt)("inlineCode",{parentName:"p"},"Int3facechain/bridge")," repository."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/Int3facechain/bridge.git int3face-bridge\n")),(0,l.kt)("p",null,"Then, check out the last released version. Currently, it's ",(0,l.kt)("inlineCode",{parentName:"p"},"v0.2.6"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"cd int3face-bridge\ngit checkout v0.2.6\n")),(0,l.kt)("p",null,"At the top-level directory of the project execute the following command, which will build and install the ",(0,l.kt)("inlineCode",{parentName:"p"},"int3faced")," binary to ",(0,l.kt)("inlineCode",{parentName:"p"},"$GOPATH/bin"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"make install\n")),(0,l.kt)("h3",{id:"verify-the-installation"},"Verify the installation"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"int3faced version --long\n")),(0,l.kt)("h3",{id:"initialize-node"},"Initialize node"),(0,l.kt)("p",null,"Use ",(0,l.kt)("inlineCode",{parentName:"p"},"int3faced")," to initialize your node (replace the ",(0,l.kt)("inlineCode",{parentName:"p"},"<your_moniker>")," with a name of your choosing):"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"int3faced init <your_moniker> --chain-id=int3-test-2\n")),(0,l.kt)("h3",{id:"download-genesis"},"Download genesis"),(0,l.kt)("p",null,"Download the ",(0,l.kt)("inlineCode",{parentName:"p"},"genesis.json")," file and place it into the Int3face configuration directory (",(0,l.kt)("inlineCode",{parentName:"p"},"~/.int3faced/config")," by default)."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"wget https://raw.githubusercontent.com/Int3facechain/networks/main/int3-test-2/genesis.json --output-document $HOME/.int3faced/config/genesis.json\n")),(0,l.kt)("h3",{id:"download-app-config"},"Download app config"),(0,l.kt)("p",null,"Download the ",(0,l.kt)("inlineCode",{parentName:"p"},"config.toml")," file and place it into the Int3face configuration directory (",(0,l.kt)("inlineCode",{parentName:"p"},"~/.int3faced/config")," by default)."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"wget https://raw.githubusercontent.com/Int3facechain/networks/main/int3-test-2/config.toml --output-document $HOME/.int3faced/config/config.toml\n")),(0,l.kt)("p",null,"The next step is to set your moniker in ",(0,l.kt)("inlineCode",{parentName:"p"},"config.toml")," instead of the default one. You can do it by modifying the ",(0,l.kt)("inlineCode",{parentName:"p"},"moniker")," field at the top of the ",(0,l.kt)("inlineCode",{parentName:"p"},"config.toml")," file."),(0,l.kt)("p",null,"Besides that, you can modify the config if it's needed, but make sure to keep all the default ports and persistent peer addresses."),(0,l.kt)("h3",{id:"import-validator-key"},"Import validator key"),(0,l.kt)("p",null,"You can either create a new key for your validator or import an existing key."),(0,l.kt)("h4",{id:"create-new-key"},"Create new key"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"int3faced keys add <key_name>\n")),(0,l.kt)("p",null,"Don't forget to save the mnemonic!"),(0,l.kt)("h4",{id:"import-existing"},"Import existing"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"int3faced keys add <key_name> --recover\n")),(0,l.kt)("h3",{id:"sync-the-node"},"Sync the node"),(0,l.kt)("p",null,"We use a state snapshot to sync the state of the node. For state syncing, the ",(0,l.kt)("inlineCode",{parentName:"p"},"config.toml")," file must be properly set, which is already done if you use the config from this repo. If you want to know more about this process, feel free to refer to the documentation"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("a",{parentName:"li",href:"https://docs.cometbft.com/v0.37/core/state-sync"},"https://docs.cometbft.com/v0.37/core/state-sync")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("a",{parentName:"li",href:"https://docs.cosmos.network/main/user/run-node/run-node#state-sync"},"https://docs.cosmos.network/main/user/run-node/run-node#state-sync"))),(0,l.kt)("h4",{id:"download-and-run-update_trustsh-script"},"Download and Run update_trust.sh script"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"wget https://raw.githubusercontent.com/Int3facechain/networks/main/int3-test-2/update_trust.sh -O update_trust.sh && chmod +x update_trust.sh && ./update_trust.sh\n")),(0,l.kt)("h3",{id:"start-the-node"},"Start the node"),(0,l.kt)("p",null,"The following command starts the node. Note that after starting, the node should sync first, which may take some time until you can start using it."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"int3faced start\n")),(0,l.kt)("h3",{id:"top-up-the-account"},"Top up the account"),(0,l.kt)("p",null,"Contact the Int3face team and provide your validator's account address to top it up."),(0,l.kt)("h3",{id:"get-your-tendermint-validator-public-key"},"Get your Tendermint validator public key"),(0,l.kt)("p",null,"Firstly, you need to get your Tendermint validator public key. You must get is as it will be necessary to include in the transaction to create your validator."),(0,l.kt)("p",null,"If you are using Tendermint's native ",(0,l.kt)("inlineCode",{parentName:"p"},"priv_validator.json")," as your consensus key, you display your validator public key using the following command."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"int3faced comet show-validator\n")),(0,l.kt)("p",null,"The output looks like this"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},'{"@type":"/cosmos.crypto.ed25519.PubKey","key":"w/YfkzNivDZ34y+mbK3/j3WWgYao18tBLf4Ypm2okCU="}\n')),(0,l.kt)("h3",{id:"submit-validator-creation"},"Submit validator creation"),(0,l.kt)("p",null,"Now that you have you key imported, you are able to use it to create the validator."),(0,l.kt)("p",null,"To create the validator, you will have to choose the following parameters for your validator:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"moniker"),(0,l.kt)("li",{parentName:"ul"},"commission-rate"),(0,l.kt)("li",{parentName:"ul"},"commission-max-rate"),(0,l.kt)("li",{parentName:"ul"},"commission-max-change-rate"),(0,l.kt)("li",{parentName:"ul"},"min-self-delegation (must be >1)"),(0,l.kt)("li",{parentName:"ul"},"website (optional)"),(0,l.kt)("li",{parentName:"ul"},"details (optional)"),(0,l.kt)("li",{parentName:"ul"},"pubkey (gotten in previous step)")),(0,l.kt)("p",null,"If you would like to override the memo field, use the ",(0,l.kt)("inlineCode",{parentName:"p"},"--ip")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"--node-id")," flags."),(0,l.kt)("p",null,"An example ",(0,l.kt)("inlineCode",{parentName:"p"},"create-validator")," command looks like this:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},'int3faced tx staking create-validator \\\n  --from=my_validator \\\n  --amount=1000000uint3 \\\n  --chain-id="int3-test-2" \\\n  --moniker="{your_moniker}" # replace it \\ \n  --website="https://int3face.io/" \\\n  --details="Int3face lover" \\\n  --commission-rate="0.1" \\\n  --commission-max-rate="0.20" \\\n  --commission-max-change-rate="0.01" \\\n  --min-self-delegation="1" \\\n  --pubkey=\'{"@type":"/cosmos.crypto.ed25519.PubKey","key":"w/YfkzNivDZ34y+mbK3/j3WWgYao18tBLf4Ypm2okCU="}\' # replace it\n')),(0,l.kt)("h3",{id:"start-a-background-service"},"Start a background service"),(0,l.kt)("p",null,"You will need some way to keep the ",(0,l.kt)("inlineCode",{parentName:"p"},"int3faced start")," process always running. If you're on linux, you can do this by creating a service."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},'sudo tee /etc/systemd/system/int3faced.service > /dev/null <<EOF  \n[Unit]\nDescription=Int3face Daemon\nAfter=network-online.target\n\n[Service]\nUser=$USER\nExecStart=$(which int3faced) start\nRestart=always\nRestartSec=3\nLimitNOFILE=infinity\n\nEnvironment="DAEMON_HOME=$HOME/.int3faced/"\nEnvironment="DAEMON_NAME=int3faced"\nEnvironment="DAEMON_ALLOW_DOWNLOAD_BINARIES=false"\nEnvironment="DAEMON_RESTART_AFTER_UPGRADE=true"\n\nStandardOutput=append:$HOME/.int3faced/logs/int3faced.log\nStandardError=append:$HOME/.int3faced/logs/int3faced-error.log\nSyslogIdentifier=int3faced\n\n[Install]\nWantedBy=multi-user.target\nEOF\n')),(0,l.kt)("p",null,"Service's logs are stored into the ",(0,l.kt)("inlineCode",{parentName:"p"},"$HOME/.int3faced/logs/")," directory."),(0,l.kt)("p",null,"Then update and start the node:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"sudo -S systemctl daemon-reload\nsudo -S systemctl enable int3faced\nsudo -S systemctl start int3faced\n")),(0,l.kt)("p",null,"You can check the status with:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"sudo -S systemctl status int3faced\n")),(0,l.kt)("p",null,"And disable, stop, or restart the service:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"sudo -S systemctl disable int3faced\nsudo -S systemctl stop int3faced\nsudo -S systemctl restart int3faced\n")),(0,l.kt)("p",null,"Logs are available using the following command:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"sudo journalctl -u int3faced\n")),(0,l.kt)("h2",{id:"observer-node"},"Observer node"),(0,l.kt)("h3",{id:"build-and-install-the-binary-1"},"Build and install the binary"),(0,l.kt)("p",null,"Int3face observer provides block scanners and chain clients for Int3face and external chains."),(0,l.kt)("p",null,"To install Int3face observer, clone the repository to your local machine from Github. Please contact the Int3face team for accessing the ",(0,l.kt)("inlineCode",{parentName:"p"},"Int3facechain/observer")," repository."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/Int3facechain/observer.git int3face-int3obsd\n")),(0,l.kt)("p",null,"Then, check out the last released version. Currently, it's ",(0,l.kt)("inlineCode",{parentName:"p"},"v0.2.1"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"cd int3face-int3obsd\ngit checkout v0.2.1\n")),(0,l.kt)("p",null,"At the top-level directory of the project execute the following command, which will build and install the ",(0,l.kt)("inlineCode",{parentName:"p"},"int3obsd")," binary to ",(0,l.kt)("inlineCode",{parentName:"p"},"$GOPATH/bin"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"make install\n")),(0,l.kt)("p",null,"This command builds and installs the ",(0,l.kt)("inlineCode",{parentName:"p"},"int3obsd")," binary to ",(0,l.kt)("inlineCode",{parentName:"p"},"$GOPATH/bin"),"."),(0,l.kt)("p",null,"NOTE: if you have problem with access to the bridge go module, try to use GOPRIVATE environment variable: ",(0,l.kt)("inlineCode",{parentName:"p"},"export GOPRIVATE=github.com/Int3facechain/*")),(0,l.kt)("h3",{id:"init-the-observer"},"Init the observer"),(0,l.kt)("p",null,"After that, ",(0,l.kt)("inlineCode",{parentName:"p"},"int3obsd")," can be used to initialize the configuration."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"int3obsd init\n")),(0,l.kt)("p",null,"This creates the observer configuration in the Int3face home directory (",(0,l.kt)("inlineCode",{parentName:"p"},"~/.int3faced")," by default) with the following folders:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"observer\n\u2514\u2500\u2500 default\n    \u251c\u2500\u2500 tss\n    \u251c\u2500\u2500 logs\n    \u251c\u2500\u2500 node_key\n    \u251c\u2500\u2500 node_key.pub\n    \u251c\u2500\u2500 observer.toml\n    \u251c\u2500\u2500 pool_key.pub\n    \u2514\u2500\u2500 pre_params.hex\n")),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"default")," folder stores the current observer profile; refer to ",(0,l.kt)("a",{parentName:"p",href:"#profiles"},"Profiles")," for details. The profile folder contents:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"tss")," is a folder with all TSS-related information"),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"logs")," is a folder for logs"),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"node_key")," is the node's private key"),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"node_key.pub")," is the node's public key"),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"observer.toml")," is the observer config file"),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"pool_key.pub")," is the current public key of the committee"),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"pre_params.json")," is the hexed pre-parameters used for the key generation")),(0,l.kt)("p",null,"All the files and folders contain randomly generated data, which is sufficient for launching the node. Please do not modify these files unless you know what you are doing!"),(0,l.kt)("h3",{id:"download-observer-config"},"Download observer config"),(0,l.kt)("p",null,"Download the ",(0,l.kt)("inlineCode",{parentName:"p"},"observer.toml")," file and place it into the observer configuration directory (",(0,l.kt)("inlineCode",{parentName:"p"},"~/.int3faced/observer/default")," by default)."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"wget https://raw.githubusercontent.com/Int3facechain/networks/main/int3-test-2/observer.toml --output-document $HOME/.int3faced/observer/default/observer.toml\n")),(0,l.kt)("p",null,"Modify the config if it's needed. The most important thing is to ensure that the ",(0,l.kt)("inlineCode",{parentName:"p"},"keyring-folder")," parameter is properly configured and points to your keyring. Note that in some Linux distributions, the observer binary fails to parse a tilde sign in the home-relative path. Therefore, if you receive an error saying that the keyring is not found, try changing the keyring path in ",(0,l.kt)("inlineCode",{parentName:"p"},"observer.toml")," from, for example, ",(0,l.kt)("inlineCode",{parentName:"p"},"~/.intrfaced")," to ",(0,l.kt)("inlineCode",{parentName:"p"},"/root/.intrfaced")," (meaning avoid using ",(0,l.kt)("inlineCode",{parentName:"p"},"~"),")."),(0,l.kt)("h3",{id:"start-the-observer"},"Start the observer"),(0,l.kt)("p",null,"Start the observer using your validator's account."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"int3obsd start --from <key_name>\n")),(0,l.kt)("p",null,"You will need some way to keep the ",(0,l.kt)("inlineCode",{parentName:"p"},"int3obsd start")," process always running. If you're on linux, you can do this by creating a service."),(0,l.kt)("p",null,"To make the service work, you need a way to pass your keyring passphrase to the service. One option to do that is to create an environment variable with your passphrase and make it persistent for the current linux user."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"echo 'export PASSPHRASE=\"<your_keyring_passphrase>\"' | tee -a .profile\n")),(0,l.kt)("p",null,"And to load changes type"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"source .profile\n")),(0,l.kt)("p",null,"This command will add a new variable called ",(0,l.kt)("inlineCode",{parentName:"p"},"PASSPHRASE")," and persist it in your bash config. Later, the observer service will use it to start automatically."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},'sudo tee /etc/systemd/system/int3obsd.service > /dev/null <<EOF  \n[Unit]\nDescription=Int3face Observer Daemon\nAfter=network-online.target\n\n[Service]\nUser=$USER\nExecStart=/bin/sh -c \'echo ${PASSPHRASE} | $(which int3obsd) start --from my_validator_2\'\nRestart=always\nRestartSec=3\nLimitNOFILE=infinity\n\nEnvironment="DAEMON_HOME=$HOME/.int3faced/observer"\nEnvironment="DAEMON_NAME=int3obsd"\nEnvironment="DAEMON_ALLOW_DOWNLOAD_BINARIES=false"\nEnvironment="DAEMON_RESTART_AFTER_UPGRADE=true"\n\nStandardOutput=append:$HOME/.int3faced/observer/default/logs/int3obsd.log\nStandardError=append:$HOME/.int3faced/observer/default/logs/int3obsd-error.log\nSyslogIdentifier=int3obsd\n\n[Install]\nWantedBy=multi-user.target\nEOF\n')),(0,l.kt)("p",null,"Service's logs are stored into the ",(0,l.kt)("inlineCode",{parentName:"p"},"$HOME/.int3faced/observer/default/logs/")," directory."),(0,l.kt)("p",null,"Then update and start the node:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"sudo -S systemctl daemon-reload\nsudo -S systemctl enable int3obsd\nsudo -S systemctl start int3obsd\n")),(0,l.kt)("p",null,"You can check the status with:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"sudo -S systemctl status int3obsd\n")),(0,l.kt)("p",null,"And disable, stop, or restart the service:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"sudo -S systemctl disable int3obsd\nsudo -S systemctl stop int3obsd\nsudo -S systemctl restart int3obsd\n")),(0,l.kt)("p",null,"Logs are available using the following command:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"sudo journalctl -u int3obsd\n")),(0,l.kt)("h3",{id:"join-the-committee"},"Join the committee"),(0,l.kt)("p",null,"At the beginning, your node is not part of the TSS committee. While you can observe blocks, your vote will not be counted during bridging. To become a participant, please wait for the next round of pool public key generation. If you want to expedite this process or require additional information, feel free to contact our team!"),(0,l.kt)("h2",{id:"doge-node"},"DOGE Node"),(0,l.kt)("h3",{id:"download-binaries"},"Download binaries"),(0,l.kt)("p",null,"Download the DOGE binaries and extract them to the bin folder."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"wget https://github.com/dogecoin/dogecoin/releases/download/v1.14.7/dogecoin-1.14.7-x86_64-linux-gnu.tar.gz\ntar -xzvf dogecoin-1.14.7-x86_64-linux-gnu.tar.gz\nmv dogecoin-1.14.7/bin/* ~/bin/\n\n# We can remove these\nrm -rf dogecoin-1.14.7 dogecoin-1.14.7-x86_64-linux-gnu.tar.gz\n")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"bin")," folder is a folder added to the ",(0,l.kt)("inlineCode",{parentName:"p"},"PATH")," environment variable. However, you can use an arbitrary folder to store the binaries."),(0,l.kt)("p",null,"If you also want to use the ",(0,l.kt)("inlineCode",{parentName:"p"},"bin")," folder, one can be added to the ",(0,l.kt)("inlineCode",{parentName:"p"},"PATH")," using the following command:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"echo 'export PATH=$PATH:~/bin' | tee -a .profile\n")),(0,l.kt)("p",null,"And to load changes type"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"source .profile\n")),(0,l.kt)("h3",{id:"create-home-dir"},"Create home dir"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"mkdir ~/.dogecoin\n")),(0,l.kt)("h3",{id:"download-doge-configuration"},"Download DOGE configuration"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"wget https://raw.githubusercontent.com/Int3facechain/networks/main/int3-test-2/dogecoin.conf --output-document $HOME/.dogecoin/dogecoin.conf\n")),(0,l.kt)("p",null,"And set your own ",(0,l.kt)("inlineCode",{parentName:"p"},"rpcuser")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"rpcpassword")," in the downloaded file. Also, modify these fields in the ",(0,l.kt)("inlineCode",{parentName:"p"},"observer.toml")," file, so the observer can connect to the Dogecoin node."),(0,l.kt)("h3",{id:"start-the-node-1"},"Start the node"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"dogecoind\n")),(0,l.kt)("h3",{id:"verify-the-node-is-started"},"Verify the node is started"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"dogecoin-cli getinfo\n")),(0,l.kt)("p",null,"You should see a response like this:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "version": 1140700,\n  "protocolversion": 70015,\n  "walletversion": 130000,\n  "balance": 0.00000000,\n  "blocks": 55054,\n  "timeoffset": 0,\n  "connections": 8,\n  "proxy": "",\n  "difficulty": 0.0005981929943754981,\n  "testnet": true,\n  "keypoololdest": 1715596527,\n  "keypoolsize": 100,\n  "paytxfee": 0.01000000,\n  "relayfee": 0.00100000,\n  "errors": ""\n}\n')),(0,l.kt)("h3",{id:"mine-blocks"},"Mine blocks"),(0,l.kt)("p",null,"Mine blocks to collect new coins. You may need to execute this operation several times until you get the coins."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"dogecoin-cli generate 110\n")),(0,l.kt)("p",null,"110 is the number of the mined blocks, this may be an arbitrary number. Keep in mind, that Dogecoin has a maturity period of 100 blocks, this means that any mined tokens will be reflected in your balance only after 100 blocks."),(0,l.kt)("p",null,"Response:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'[\n  "ad3c340e804e0b08af4b3302613b8f8f02ad7b4ea1cb2267e296868ee9705027",\n  ...\n]\n')),(0,l.kt)("h3",{id:"verify-the-blocks-are-mined"},"Verify the blocks are mined"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"dogecoin-cli getblockcount\n")),(0,l.kt)("h3",{id:"check-the-balance-of-our-node"},"Check the balance of our node"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"dogecoin-cli getbalance\n")),(0,l.kt)("h2",{id:"btc-node"},"BTC Node"),(0,l.kt)("h3",{id:"download-binaries-1"},"Download binaries"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"wget https://bitcoincore.org/bin/bitcoin-core-25.0/bitcoin-25.0-x86_64-linux-gnu.tar.gz\ntar -xzvf bitcoin-25.0-x86_64-linux-gnu.tar.gz\nmv bitcoin-25.0/bin/* ~/bin/\n\nrm -rf bitcoin-25.0  bitcoin-25.0-x86_64-linux-gnu.tar.gz\n")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"bin")," folder is a folder added to the ",(0,l.kt)("inlineCode",{parentName:"p"},"PATH")," environment variable. However, you can use an arbitrary folder to store the binaries."),(0,l.kt)("p",null,"If you also want to use the ",(0,l.kt)("inlineCode",{parentName:"p"},"bin")," folder, one can be added to the ",(0,l.kt)("inlineCode",{parentName:"p"},"PATH")," using the following command:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"echo 'export PATH=$PATH:~/bin' | tee -a .profile\n")),(0,l.kt)("p",null,"And to load changes type"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"source .profile\n")),(0,l.kt)("h3",{id:"create-home-dir-1"},"Create home dir"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"mkdir ~/.bitcoin\n")),(0,l.kt)("h3",{id:"download-btc-configuration"},"Download BTC configuration"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"wget https://raw.githubusercontent.com/Int3facechain/networks/main/int3-test-2/bitcoin.conf --output-document $HOME/.bitcoin/bitcoin.conf\n")),(0,l.kt)("h3",{id:"start-the-node-2"},"Start the node"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"bitcoind\n")),(0,l.kt)("h3",{id:"verify-node-is-started"},"Verify node is started"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"bitcoin-cli getblockchaininfo\n")),(0,l.kt)("p",null,"You should see a response like this:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "chain": "regtest",\n  "blocks": 115,\n  "headers": 115,\n  "bestblockhash": "49e631bd7f92343f2c3a74636821493770309993ba59abbf518da911f850917f",\n  "difficulty": 4.656542373906925e-10,\n  "time": 1718890479,\n  "mediantime": 1718884754,\n  "verificationprogress": 1,\n  "initialblockdownload": false,\n  "chainwork": "00000000000000000000000000000000000000000000000000000000000000e8",\n  "size_on_disk": 38617,\n  "pruned": false,\n  "warnings": ""\n}\n')),(0,l.kt)("h3",{id:"create-new-wallet-or-load-your-own-wallet"},"Create new wallet or load your own wallet"),(0,l.kt)("h4",{id:"create"},"Create"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},'bitcoin-cli createwallet "$your_wallet_name$" false false "" false true true\n')),(0,l.kt)("p",null,"Args after the wallet name:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Enables use of the private keys"),(0,l.kt)("li",{parentName:"ol"},"Init keys and HD seed"),(0,l.kt)("li",{parentName:"ol"},"Password"),(0,l.kt)("li",{parentName:"ol"},"Keep track of coin reuse"),(0,l.kt)("li",{parentName:"ol"},"Create native descriptors"),(0,l.kt)("li",{parentName:"ol"},"Load this wallet on startup")),(0,l.kt)("h4",{id:"load"},"Load"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},'bitcoin-cli loadwallet "$your_wallet_name$" true\n')),(0,l.kt)("p",null,"Args after the wallet name:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Load this wallet on startup")),(0,l.kt)("h3",{id:"create-new-address-for-your-wallet"},"Create new address for your wallet"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"bitcoin-cli getnewaddress\n")),(0,l.kt)("h3",{id:"mine-blocks-1"},"Mine blocks"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"bitcoin-cli generatetoaddress 110 $YOUR_ADDR$\n")),(0,l.kt)("p",null,"110 is the number of the mined blocks, this may be an arbitrary number. Keep in mind, that Bitcoin has a maturity period of 100 blocks, this means that any mined tokens will be reflected in your balance only after 100 blocks."),(0,l.kt)("h3",{id:"verify-the-blocks-are-mined-1"},"Verify the blocks are mined"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"bitcoin-cli getblockcount\n")),(0,l.kt)("h3",{id:"check-the-balance-of-our-node-1"},"Check the balance of our node"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"bitcoin-cli getbalance\n")),(0,l.kt)("h2",{id:"bch-node"},"BCH Node"),(0,l.kt)("h3",{id:"download-binaries-2"},"Download binaries"),(0,l.kt)("p",null,"BCH binaries names intersect with the BTC names. So, we are going to rename the binaries."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"wget https://github.com/bitcoin-cash-node/bitcoin-cash-node/releases/download/v27.1.0/bitcoin-cash-node-27.1.0-x86_64-linux-gnu.tar.gz\ntar -xzvf bitcoin-cash-node-27.1.0-x86_64-linux-gnu.tar.gz\n\nmv bitcoin-cash-node-27.1.0/bin/bitcoind ~/bin/bcashd\nmv bitcoin-cash-node-27.1.0/bin/bitcoin-cli ~/bin/bcash-cli\nmv bitcoin-cash-node-27.1.0/bin/bitcoin-tx ~/bin/bcash-tx\n\nrm -rf bitcoin-cash-node-27.1.0 bitcoin-cash-node-27.1.0-x86_64-linux-gnu.tar.gz\n")),(0,l.kt)("h3",{id:"create-home-dir-2"},"Create home dir"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"mkdir ~/.bitcoin-cash\n")),(0,l.kt)("h3",{id:"download-bch-configuration"},"Download BCH configuration"),(0,l.kt)("p",null,"wget ",(0,l.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/Int3facechain/networks/main/int3-test-2/bitcoin-cash.conf"},"https://raw.githubusercontent.com/Int3facechain/networks/main/int3-test-2/bitcoin-cash.conf")," --output-document $HOME/.bitcoin-cash/bitcoin-cash.conf"),(0,l.kt)("h3",{id:"create-aliases"},"Create aliases"),(0,l.kt)("p",null,"Since the BCH names and paths conflict with the BTC, let's create aliases for the main BCH binaries."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"echo \"alias bcashd='bcashd -conf=$HOME/.bitcoin-cash/bitcoin-cash.conf -datadir=$HOME/.bitcoin-cash'\" | tee -a .profile\n\necho \"alias bcash-cli='bcash-cli -conf=$HOME/.bitcoin-cash/bitcoin-cash.conf'\" | tee -a .profile\n")),(0,l.kt)("p",null,"And to load changes type"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"source .profile\n")),(0,l.kt)("h3",{id:"start-the-node-3"},"Start the node"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"bcashd\n")),(0,l.kt)("h3",{id:"verify-node-is-started-1"},"Verify node is started"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"bcash-cli getblockchaininfo\n")),(0,l.kt)("p",null,"You should see a response like this:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "chain": "regtest",\n  "blocks": 0,\n  "headers": 0,\n  "bestblockhash": "0f9188f13cb7b2c71f2a335e3a4fc328bf5beb436012afca590b1a11466e2206",\n  "difficulty": 4.656542373906925e-10,\n  "mediantime": 1296688602,\n  "verificationprogress": 1,\n  "initialblockdownload": true,\n  "chainwork": "0000000000000000000000000000000000000000000000000000000000000002",\n  "size_on_disk": 293,\n  "pruned": false,\n  "warnings": ""\n}\n')),(0,l.kt)("h3",{id:"create-new-address-for-your-wallet-1"},"Create new address for your wallet"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"bcash-cli getnewaddress\n")),(0,l.kt)("h3",{id:"mine-blocks-2"},"Mine blocks"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"bcash-cli generatetoaddress 110 $YOUR_ADDR$\n")),(0,l.kt)("p",null,"110 is the number of the mined blocks, this may be an arbitrary number. Keep in mind, that Bitcoin has a maturity period of 100 blocks, this means that any mined tokens will be reflected in your balance only after 100 blocks."),(0,l.kt)("h3",{id:"verify-the-blocks-are-mined-2"},"Verify the blocks are mined"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"bcash-cli getblockcount\n")),(0,l.kt)("h3",{id:"check-the-balance-of-your-node"},"Check the balance of your node"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"bcash-cli getbalance\n")),(0,l.kt)("h2",{id:"ltc-node"},"LTC Node"),(0,l.kt)("h3",{id:"download-binaries-3"},"Download binaries"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"wget https://download.litecoin.org/litecoin-0.21.3/linux/litecoin-0.21.3-x86_64-linux-gnu.tar.gz\ntar -xzvf litecoin-0.21.3-x86_64-linux-gnu.tar.gz\nmv litecoin-0.21.3/bin/* ~/bin/\n\nrm -rf litecoin-0.21.3 litecoin-0.21.3-x86_64-linux-gnu.tar.gz\n")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"bin")," folder is a folder added to the ",(0,l.kt)("inlineCode",{parentName:"p"},"PATH")," environment variable. However, you can use an arbitrary folder to store the binaries."),(0,l.kt)("p",null,"If you also want to use the ",(0,l.kt)("inlineCode",{parentName:"p"},"bin")," folder, one can be added to the ",(0,l.kt)("inlineCode",{parentName:"p"},"PATH")," using the following command:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"echo 'export PATH=$PATH:~/bin' | tee -a .profile\n")),(0,l.kt)("p",null,"And to load changes type"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"source .profile\n")),(0,l.kt)("h3",{id:"create-home-dir-3"},"Create home dir"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"mkdir ~/.litecoin\n")),(0,l.kt)("h3",{id:"download-ltc-configuration"},"Download LTC configuration"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"wget https://raw.githubusercontent.com/Int3facechain/networks/main/int3-test-2/litecoin.conf --output-document $HOME/.litecoin/litecoin.conf\n")),(0,l.kt)("h3",{id:"start-the-node-4"},"Start the node"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"litecoind\n")),(0,l.kt)("h3",{id:"verify-node-is-started-2"},"Verify node is started"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"litecoin-cli getblockchaininfo\n")),(0,l.kt)("p",null,"You should see a response like this:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "chain": "regtest",\n  "blocks": 0,\n  "headers": 0,\n  "bestblockhash": "530827f38f93b43ed12af0b3ad25a288dc02ed74d6d7857862df51fc56c416f9",\n  "difficulty": 4.656542373906925e-10,\n  "mediantime": 1296688602,\n  "verificationprogress": 1,\n  "initialblockdownload": true,\n  "chainwork": "0000000000000000000000000000000000000000000000000000000000000002",\n  "size_on_disk": 288,\n  "pruned": false,\n  "softforks": {\n    "bip34": {\n      "type": "buried",\n      "active": false,\n      "height": 500\n    },\n    "bip66": {\n      "type": "buried",\n      "active": false,\n      "height": 1251\n    },\n    "bip65": {\n      "type": "buried",\n      "active": false,\n      "height": 1351\n    },\n    "csv": {\n      "type": "buried",\n      "active": false,\n      "height": 432\n    },\n    "segwit": {\n      "type": "buried",\n      "active": true,\n      "height": 0\n    },\n    "testdummy": {\n      "type": "bip9",\n      "bip9": {\n        "status": "defined",\n        "start_time": 0,\n        "timeout": 9223372036854775807,\n        "since": 0\n      },\n      "active": false\n    },\n    "taproot": {\n      "type": "bip9",\n      "bip9": {\n        "status": "active",\n        "start_time": -1,\n        "timeout": 9223372036854775807,\n        "since": 0\n      },\n      "height": 0,\n      "active": true\n    },\n    "mweb": {\n      "type": "bip9",\n      "bip9": {\n        "status": "defined",\n        "start_time": 1601450001,\n        "timeout": 9223372036854775807,\n        "since": 0\n      },\n      "active": false\n    }\n  },\n  "warnings": ""\n}\n')),(0,l.kt)("h3",{id:"create-new-wallet"},"Create new wallet"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},'litecoin-cli createwallet "observer" false false "" false true true \n')),(0,l.kt)("p",null,"Args after the wallet name:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Enables use of the private keys"),(0,l.kt)("li",{parentName:"ol"},"Init keys and HD seed"),(0,l.kt)("li",{parentName:"ol"},"Password"),(0,l.kt)("li",{parentName:"ol"},"Keep track of coin reuse"),(0,l.kt)("li",{parentName:"ol"},"Create native descriptors"),(0,l.kt)("li",{parentName:"ol"},"Load this wallet on startup")),(0,l.kt)("p",null,'Use the name "observer" for the wallet, as it\'s required by the observer node'),(0,l.kt)("h3",{id:"create-new-address-for-your-wallet-2"},"Create new address for your wallet"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"litecoin-cli getnewaddress\n")),(0,l.kt)("h3",{id:"mine-blocks-3"},"Mine blocks"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"litecoin-cli generatetoaddress 110 $YOUR_ADDR\n")),(0,l.kt)("p",null,"110 is the number of the mined blocks, this may be an arbitrary number. Keep in mind, that Litecoin has a maturity period of 100 blocks, this means that any mined tokens will be reflected in your balance only after 100 blocks."),(0,l.kt)("h3",{id:"verify-the-blocks-are-mined-3"},"Verify the blocks are mined"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"litecoin-cli getblockcount\n")),(0,l.kt)("h3",{id:"check-the-balance-of-your-node-1"},"Check the balance of your node"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"litecoin-cli getbalance\n")))}p.isMDXComponent=!0}}]);