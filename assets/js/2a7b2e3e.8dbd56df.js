"use strict";(self.webpackChunkint3face=self.webpackChunkint3face||[]).push([[92],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>u});var i=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=i.createContext({}),c=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},d=function(e){var t=c(e.components);return i.createElement(l.Provider,{value:t},e.children)},h="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},b=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),h=c(n),b=a,u=h["".concat(l,".").concat(b)]||h[b]||p[b]||o;return n?i.createElement(u,r(r({ref:t},d),{},{components:n})):i.createElement(u,r({ref:t},d))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,r=new Array(o);r[0]=b;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[h]="string"==typeof e?e:a,r[1]=s;for(var c=2;c<o;c++)r[c]=n[c];return i.createElement.apply(null,r)}return i.createElement.apply(null,n)}b.displayName="MDXCreateElement"},8943:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var i=n(7462),a=(n(7294),n(3905));const o={},r="ADR-014: Babylon Finality",s={unversionedId:"ADR/adr-014-babylon-finality",id:"ADR/adr-014-babylon-finality",title:"ADR-014: Babylon Finality",description:"Status",source:"@site/docs/ADR/adr-014-babylon-finality.md",sourceDirName:"ADR",slug:"/ADR/adr-014-babylon-finality",permalink:"/docs/ADR/adr-014-babylon-finality",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"ADR-013: Rate Limiting",permalink:"/docs/ADR/adr-013-rate-limiting"}},l={},c=[{value:"Status",id:"status",level:2},{value:"Context",id:"context",level:2},{value:"Integration options",id:"integration-options",level:2},{value:"Bitcoin delegation",id:"bitcoin-delegation",level:2},{value:"Bitcoin finality",id:"bitcoin-finality",level:2},{value:"More Glossary",id:"more-glossary",level:2},{value:"Open Questions",id:"open-questions",level:2},{value:"References",id:"references",level:2}],d={toc:c},h="wrapper";function p(e){let{components:t,...o}=e;return(0,a.kt)(h,(0,i.Z)({},d,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"adr-014-babylon-finality"},"ADR-014: Babylon Finality"),(0,a.kt)("h2",{id:"status"},"Status"),(0,a.kt)("p",null,"Research"),(0,a.kt)("h2",{id:"context"},"Context"),(0,a.kt)("p",null,"This ADR introduces the idea of integrating Babylon chain's Bitcoin staking with Int3face's native Bitcoin bridging. It leverages the concept of a vault as an entry point for the bridge, which allows tokens to be staked using Babylon's contract. Furthermore, Babylon Finality helps secure the chain with Bitcoin PoS consensus."),(0,a.kt)("p",null,"On the Babylon side, there are the following main entities:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"Validators"),": Secure and operate the Babylon chain."),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"Finality Providers"),": Validators on the Bitcoin side, functioning similarly to PoS validators but for Bitcoin."),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"BTC Stakers"),": Users who intend to stake their BTC assets.")),(0,a.kt)("p",null,"On the Int3face side, the main entities are:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"Validators"),": Secure and operate the Int3face chain."),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"Observers"),": Facilitate bridge transfers between external chains and Int3face.")),(0,a.kt)("p",null,"In Babylon, each finality provider has its own address in Bitcoin, which can be used for receiving delegations and eventually staking."),(0,a.kt)("h2",{id:"integration-options"},"Integration options"),(0,a.kt)("p",null,"Int3face might get the security by adding support for finality providers. There are several ways on how to make this liquidity work for security:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Providing headers for timestamping (and optionally receiving their checkpointing data). It\u2019s not a strong economic security by itself, since effectively the Babylon Finality Providers could double-sign blocks \u2014 they only can\u2019t do that for Babylon\u2019s blocks. This can be used for:",(0,a.kt)("ol",{parentName:"li"},(0,a.kt)("li",{parentName:"ol"},"Protecting against long-range attacks."),(0,a.kt)("li",{parentName:"ol"},"Providing fast unbonding."),(0,a.kt)("li",{parentName:"ol"},"Having a \u2018safe\u2019 ledger that can be used as reference for a previous chain state."))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"Code Solution"),"[7]",": Provisioning BTC security and requiring a Babylon Finality Provider set\u2019s consensus to consider a block finalized. This provides similar benefits as timestamping, but it also makes it so the Bitcoin economic security is integrated into the whole process. Since the Finality Providers in this case do sign the target chain blocks, if they double-sign, that\u2019s slashable. Therefore, the main integration step is to install FPs on every validator node and deploy a specific ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/babylonlabs-io/babylon-contract"},"smart contract")," produced by Babylon. This also includes two main ways","[8]"," how to integrate Babylon in the consensus:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Power mixing"),": Power mixing: The PoS chain validators are integrated into the Babylon Chain as Finality Providers. Through an oracle, their power is mixed to the original chain\u2019s asset to determine the validator\u2019s weight. It does require changing the consensus protocol significantly."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Dual quorum"),": : The Finality Providers, either as the PoS chain validators or as a separate actor set, sign blocks as soon as they\u2019re finalized by the base protocol consensus. This additional signature constitutes either the block\u2019s actual finality or an additional finality, depending on how the chain wants to deal with this fundamentally. A good point is the additional finality approach provides more security to actors that expect it, while not absolutely requiring protocol changes. This is what\u2019s suggested in the ",(0,a.kt)("a",{parentName:"li",href:"https://forum.cosmos.network/t/chips-signaling-phase-simplified-babylon-x-cosmos-hub/13932"},"current Babylon-Cosmos Hub proposal"),"."))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"No-code Solution"),"[5]",": Babylon smart contract for providing a DA Layer. This assumes no code from the consumer chain side, while making Babylon a DA Layer for finality signatures. Also, this solution involves deploying backends for verifying these signatures. The whole process might look like a proof in optimistic rollups. ")),(0,a.kt)("h2",{id:"bitcoin-delegation"},"Bitcoin delegation"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"delegation",src:n(557).Z,width:"588",height:"371"})),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"A user delegates BTC to FP using BTC Staker"),(0,a.kt)("li",{parentName:"ol"},"BTC Staker submits a delegation proof to Babylon"),(0,a.kt)("li",{parentName:"ol"},"Babylon updates the FP's voting power")),(0,a.kt)("h2",{id:"bitcoin-finality"},"Bitcoin finality"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"babylon-finality.svg",src:n(4519).Z,width:"851",height:"511"})),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Int3face produces a new block and finalizes it with its own consensus"),(0,a.kt)("li",{parentName:"ol"},"Now, Int3face passes the block to the special smart contract","[7]"," and starts waiting for FPs to tally the block"),(0,a.kt)("li",{parentName:"ol"},"Tally request is sent to the smart contract"),(0,a.kt)("li",{parentName:"ol"},"FPs witness the signable block and generate their signatures"),(0,a.kt)("li",{parentName:"ol"},"Signatures are submitted to Babylon"),(0,a.kt)("li",{parentName:"ol"},"Smart contract then receives a final tally confirmation through Babylon IBC Relayer"),(0,a.kt)("li",{parentName:"ol"},"Smart contract submits signed block to Int3face, the block is now considered finalized")),(0,a.kt)("h2",{id:"more-glossary"},"More Glossary"),(0,a.kt)("p",null,"Finality Gadget is a modified Cosmos BFT implementation that includes an additional finality round on top of the standard consensus, where finality providers sign on blocks using their Bitcoin-staked voting power. However, only the active Finality Providers are included in the voting round (and receive rewards) \u2014 the Babylon Chain considers as active the first X Finality Providers in terms of overall voting power through the parameter ",(0,a.kt)("inlineCode",{parentName:"p"},"max_active_finality_providers"),"."),(0,a.kt)("h2",{id:"open-questions"},"Open Questions"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"In general case, how many FPs should be running on the PoS chain to make Babylon securely work?")),(0,a.kt)("h2",{id:"references"},"References"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"BTC staking overview: ",(0,a.kt)("a",{parentName:"li",href:"https://babylonchain.io/blog/technical-preliminaries-of-bitcoin-staking"},"https://babylonchain.io/blog/technical-preliminaries-of-bitcoin-staking")),(0,a.kt)("li",{parentName:"ol"},"BTC staking background: ",(0,a.kt)("a",{parentName:"li",href:"https://babylonchain.io/blog/babylon-s-bitcoin-staking-contract"},"https://babylonchain.io/blog/babylon-s-bitcoin-staking-contract")),(0,a.kt)("li",{parentName:"ol"},"BTC staker guide: ",(0,a.kt)("a",{parentName:"li",href:"https://docs.babylonchain.io/docs/user-guides/btc-staking-testnet/become-btc-staker"},"https://docs.babylonchain.io/docs/user-guides/btc-staking-testnet/become-btc-staker")),(0,a.kt)("li",{parentName:"ol"},"Finality provider guide: ",(0,a.kt)("a",{parentName:"li",href:"https://docs.babylonchain.io/docs/user-guides/btc-staking-testnet/finality-providers/overview"},"https://docs.babylonchain.io/docs/user-guides/btc-staking-testnet/finality-providers/overview")),(0,a.kt)("li",{parentName:"ol"},"BTC staking with an external DA contract: ",(0,a.kt)("a",{parentName:"li",href:"https://emphasized-acoustic-f68.notion.site/BTC-staking-integration-without-consumer-side-change-99fe1ff56b324ebbbe745b9fdc838463"},"https://emphasized-acoustic-f68.notion.site/BTC-staking-integration-without-consumer-side-change-99fe1ff56b324ebbbe745b9fdc838463")),(0,a.kt)("li",{parentName:"ol"},"Babylon Phase-1 Mainnet: ",(0,a.kt)("a",{parentName:"li",href:"https://medium.com/babylonlabs-io/babylon-bitcoin-staking-mainnet-launch-phase-1-9188a2a1bf46"},"https://medium.com/babylonlabs-io/babylon-bitcoin-staking-mainnet-launch-phase-1-9188a2a1bf46")),(0,a.kt)("li",{parentName:"ol"},"Babylon FP smart contract: ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/babylonlabs-io/babylon-contract"},"https://github.com/babylonlabs-io/babylon-contract")),(0,a.kt)("li",{parentName:"ol"},"Babylon overview: ",(0,a.kt)("a",{parentName:"li",href:"https://nethermind.notion.site/EXT-Babylon-Overview-d0c45a31668e4425b9fe501ccb9a3897"},"https://nethermind.notion.site/EXT-Babylon-Overview-d0c45a31668e4425b9fe501ccb9a3897"))))}p.isMDXComponent=!0},557:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/babylon-delegate-12c0540279a612423d25fa90dfc8c905.svg"},4519:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/babylon-finality-62e9833db9b8a3a91dd587690004f549.svg"}}]);